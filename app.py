import joblib
import random
import re
from flask import Flask, request, jsonify, render_template
from pythainlp import word_tokenize
from pythainlp.corpus.common import thai_stopwords
from pythainlp.corpus.common import thai_stopwords as get_stopwords

stopwords_list = list(get_stopwords())

def split_by_space(text):
    return text.split(' ')

def preprocess(text):
    text = re.sub('[^‡∏Å-‡πôa-zA-Z]', ' ', text)
    tokens = word_tokenize(text)
    tokens = [word for word in tokens if word.lower() not in stopwords_list]
    return ' '.join(tokens)

app = Flask(__name__)

vectorizer = joblib.load('vectorizer.pkl')
model = joblib.load('trained_thai_model.sav')

positive_responses = [
    "‡∏¢‡∏≠‡∏î‡πÄ‡∏¢‡∏µ‡πà‡∏¢‡∏°! ‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì‡πÄ‡∏ï‡πá‡∏°‡πÑ‡∏õ‡∏î‡πâ‡∏ß‡∏¢‡∏û‡∏•‡∏±‡∏á‡∏ö‡∏ß‡∏Å ‚ú®",
    "‡∏ä‡∏∑‡πà‡∏ô‡∏ä‡∏°‡πÉ‡∏ô‡∏û‡∏•‡∏±‡∏á‡∏ö‡∏ß‡∏Å‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì‡∏°‡∏≤‡∏Å‡∏Ñ‡∏£‡∏±‡∏ö üòä",
    "‡∏≠‡πà‡∏≤‡∏ô‡πÅ‡∏•‡πâ‡∏ß‡∏£‡∏π‡πâ‡∏™‡∏∂‡∏Å‡∏™‡∏î‡πÉ‡∏™‡∏î‡∏µ‡πÉ‡∏à‡πÑ‡∏õ‡∏î‡πâ‡∏ß‡∏¢‡πÄ‡∏•‡∏¢!",
    "‡∏Ñ‡∏ß‡∏≤‡∏°‡∏£‡∏π‡πâ‡∏™‡∏∂‡∏Å‡∏î‡∏µ‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì‡πÄ‡∏õ‡πá‡∏ô‡∏û‡∏•‡∏±‡∏á‡∏á‡∏≤‡∏ô‡∏ö‡∏ß‡∏Å‡∏°‡∏≤‡∏Å‚Äã ‡πÜ‚Äã ‡∏ñ‡πâ‡∏≤‡∏´‡∏≤‡∏Å‡∏°‡∏µ‡πÉ‡∏Ñ‡∏£‡∏ú‡πà‡∏≤‡∏ô‡∏°‡∏≤‡∏≠‡πà‡∏≤‡∏ô‡∏Ñ‡∏á‡πÑ‡∏°‡πà‡πÅ‡∏õ‡∏•‡∏Å‡∏ó‡∏µ‡πà‡∏à‡∏∞‡πÄ‡∏ú‡∏•‡∏≠‡∏¢‡∏¥‡πâ‡∏°‡∏≠‡∏≠‡∏Å‡∏°‡∏≤‡πÅ‡∏ô‡πà‚Äã ‡πÜ‚Äã  ‡πÄ‡∏•‡∏¢",
    "‡∏°‡∏±‡∏ô‡∏î‡∏µ‡∏°‡∏≤‡∏Å‡πÄ‡∏•‡∏¢‡∏ô‡∏∞‡∏ó‡∏µ‡πà‡πÑ‡∏î‡πâ‡πÄ‡∏´‡πá‡∏ô‡πÄ‡∏ò‡∏≠‡πÄ‡∏à‡∏≠‡πÄ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏î‡∏µ‡πÜ ‡πÅ‡∏ö‡∏ö‡∏ô‡∏µ‡πâ",
	"‡∏Ç‡∏≠‡πÉ‡∏´‡πâ‡∏°‡∏µ‡πÇ‡∏°‡πÄ‡∏°‡∏ô‡∏ï‡πå‡πÅ‡∏ö‡∏ö‡∏ô‡∏µ‡πâ‡πÄ‡∏Ç‡πâ‡∏≤‡∏°‡∏≤‡πÉ‡∏ô‡∏ä‡∏µ‡∏ß‡∏¥‡∏ï‡πÄ‡∏ò‡∏≠‡πÄ‡∏£‡∏∑‡πà‡∏≠‡∏¢‡πÜ ‡πÄ‡∏•‡∏¢‡∏ô‡∏∞",
	"‡πÄ‡∏ò‡∏≠‡∏ú‡πà‡∏≤‡∏ô‡∏≠‡∏∞‡πÑ‡∏£‡∏°‡∏≤‡∏ï‡∏±‡πâ‡∏á‡πÄ‡∏¢‡∏≠‡∏∞ ‡∏™‡∏°‡∏Ñ‡∏ß‡∏£‡πÑ‡∏î‡πâ‡πÄ‡∏à‡∏≠‡πÄ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏î‡∏µ‡πÜ ‡πÅ‡∏ö‡∏ö‡∏ô‡∏µ‡πâ‡∏™‡∏∏‡∏î‡πÜ ‡πÅ‡∏•‡πâ‡∏ß",
	"‡πÅ‡∏Ñ‡πà‡πÑ‡∏î‡πâ‡∏¢‡∏¥‡∏ô‡∏Å‡πá‡∏¢‡∏¥‡πâ‡∏°‡∏ï‡∏≤‡∏°‡πÄ‡∏•‡∏¢‡∏ô‡∏∞ ‡∏°‡∏±‡∏ô‡πÄ‡∏õ‡πá‡∏ô‡∏Ç‡πà‡∏≤‡∏ß‡∏î‡∏µ‡∏ó‡∏µ‡πà‡∏ô‡πà‡∏≤‡∏£‡∏±‡∏Å‡∏°‡∏≤‡∏Å",
	"‡πÄ‡∏ò‡∏≠‡∏Ñ‡∏ß‡∏£‡∏à‡∏∞‡πÑ‡∏î‡πâ‡∏£‡∏π‡πâ‡∏™‡∏∂‡∏Å‡∏†‡∏π‡∏°‡∏¥‡πÉ‡∏à‡πÉ‡∏ô‡∏ï‡∏±‡∏ß‡πÄ‡∏≠‡∏á‡∏à‡∏£‡∏¥‡∏á‡πÜ ‡πÑ‡∏°‡πà‡πÉ‡∏ä‡πà‡πÅ‡∏Ñ‡πà‡∏ß‡∏±‡∏ô‡∏ô‡∏µ‡πâ ‡πÅ‡∏ï‡πà‡∏ó‡∏∏‡∏Å‡∏ß‡∏±‡∏ô",
	"‡πÄ‡∏´‡πá‡∏ô‡πÅ‡∏•‡πâ‡∏ß‡∏Å‡πá‡∏≠‡∏î‡∏Ñ‡∏¥‡∏î‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡∏ß‡πà‡∏≤ ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏û‡∏¢‡∏≤‡∏¢‡∏≤‡∏°‡∏°‡∏±‡∏ô‡πÑ‡∏°‡πà‡πÄ‡∏Ñ‡∏¢‡πÄ‡∏™‡∏µ‡∏¢‡πÄ‡∏õ‡∏•‡πà‡∏≤‡πÄ‡∏•‡∏¢",
	"‡∏ö‡∏≤‡∏á‡∏ó‡∏µ‡∏™‡∏¥‡πà‡∏á‡∏î‡∏µ‡πÜ ‡∏Å‡πá‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡∏°‡∏≤‡∏î‡∏±‡∏á‡πÜ ‡πÅ‡∏ï‡πà‡∏°‡∏±‡∏ô‡πÄ‡∏á‡∏µ‡∏¢‡∏ö‡πÜ ‡πÅ‡∏•‡πâ‡∏ß‡∏≠‡∏ö‡∏≠‡∏∏‡πà‡∏ô‡πÅ‡∏ö‡∏ö‡∏ô‡∏µ‡πâ‡πÅ‡∏´‡∏•‡∏∞",
	"‡∏Ç‡∏≠‡πÉ‡∏´‡πâ‡∏ß‡∏±‡∏ô‡∏ô‡∏µ‡πâ‡πÄ‡∏õ‡πá‡∏ô‡∏à‡∏∏‡∏î‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡∏Ç‡∏≠‡∏á‡∏≠‡∏∞‡πÑ‡∏£‡∏î‡∏µ‡πÜ ‡∏≠‡∏µ‡∏Å‡∏´‡∏•‡∏≤‡∏¢‡∏≠‡∏¢‡πà‡∏≤‡∏á",
	"‡∏ö‡∏≤‡∏á‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏∏‡∏Ç‡∏°‡∏±‡∏ô‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏á‡πà‡∏≤‡∏¢ ‡πÅ‡∏ï‡πà‡∏°‡∏±‡∏ô‡∏ó‡∏≥‡πÉ‡∏´‡πâ‡πÄ‡∏£‡∏≤‡∏£‡∏π‡πâ‡∏ß‡πà‡∏≤‡πÇ‡∏•‡∏Å‡∏ô‡∏µ‡πâ‡∏¢‡∏±‡∏á‡πÉ‡∏à‡∏î‡∏µ‡∏Å‡∏±‡∏ö‡πÄ‡∏£‡∏≤‡∏≠‡∏¢‡∏π‡πà",
	"‡πÄ‡∏ò‡∏≠‡πÄ‡∏õ‡πá‡∏ô‡πÅ‡∏™‡∏á‡πÉ‡∏´‡πâ‡∏ï‡∏±‡∏ß‡πÄ‡∏≠‡∏á‡πÑ‡∏î‡πâ‡∏î‡∏µ‡∏°‡∏≤‡∏Å‡πÄ‡∏•‡∏¢‡∏ô‡∏∞‡∏ß‡∏±‡∏ô‡∏ô‡∏µ‡πâ",
    "‡∏î‡∏µ‡πÉ‡∏à‡∏Å‡∏±‡∏ö‡πÄ‡∏ò‡∏≠‡∏î‡πâ‡∏ß‡∏¢‡∏ô‡∏∞ ‡πÄ‡∏´‡πá‡∏ô‡πÅ‡∏•‡πâ‡∏ß‡∏£‡∏π‡πâ‡∏™‡∏∂‡∏Å‡∏≠‡∏∏‡πà‡∏ô‡πÉ‡∏à‡πÅ‡∏ó‡∏ô‡πÄ‡∏•‡∏¢",
	"‡πÄ‡∏ò‡∏≠‡∏™‡∏°‡∏Ñ‡∏ß‡∏£‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö‡∏™‡∏¥‡πà‡∏á‡∏î‡∏µ‡πÜ ‡πÅ‡∏ö‡∏ö‡∏ô‡∏µ‡πâ‡∏à‡∏£‡∏¥‡∏á‡πÜ",
	"‡πÄ‡∏´‡πá‡∏ô‡πÄ‡∏ò‡∏≠‡∏°‡∏µ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏∏‡∏Ç ‡∏°‡∏±‡∏ô‡∏Å‡πá‡∏î‡∏µ‡πÑ‡∏õ‡∏ñ‡∏∂‡∏á‡πÄ‡∏£‡∏≤‡πÄ‡∏•‡∏¢‡∏ô‡∏∞",
	"‡πÄ‡∏Å‡πà‡∏á‡∏°‡∏≤‡∏Å‡πÄ‡∏•‡∏¢‡∏ô‡∏∞ ‡πÑ‡∏°‡πà‡πÉ‡∏ä‡πà‡πÅ‡∏Ñ‡πà‡πÄ‡∏û‡∏£‡∏≤‡∏∞‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå ‡πÅ‡∏ï‡πà‡πÄ‡∏û‡∏£‡∏≤‡∏∞‡∏£‡∏∞‡∏´‡∏ß‡πà‡∏≤‡∏á‡∏ó‡∏≤‡∏á‡πÄ‡∏ò‡∏≠‡∏Å‡πá‡∏û‡∏¢‡∏≤‡∏¢‡∏≤‡∏°‡∏°‡∏≤‡∏ï‡∏•‡∏≠‡∏î",
	"‡∏°‡∏±‡∏ô‡πÑ‡∏°‡πà‡πÉ‡∏ä‡πà‡πÄ‡∏£‡∏∑‡πà‡∏≠‡∏á‡πÄ‡∏•‡πá‡∏Å‡πÜ ‡πÄ‡∏•‡∏¢‡∏ô‡∏∞ ‡∏†‡∏π‡∏°‡∏¥‡πÉ‡∏à‡∏î‡πâ‡∏ß‡∏¢‡∏à‡∏£‡∏¥‡∏á‡πÜ",
	"‡∏Ç‡∏≠‡∏ö‡∏Ñ‡∏∏‡∏ì‡∏ó‡∏µ‡πà‡πÅ‡∏ö‡πà‡∏á‡∏Ñ‡∏ß‡∏≤‡∏°‡∏î‡∏µ‡πÉ‡∏à‡∏ô‡∏µ‡πâ‡πÉ‡∏´‡πâ‡∏£‡∏π‡πâ‡∏™‡∏∂‡∏Å‡πÑ‡∏õ‡∏î‡πâ‡∏ß‡∏¢‡∏Å‡∏±‡∏ô",
	"‡∏à‡∏≥‡πÑ‡∏ß‡πâ‡πÄ‡∏•‡∏¢‡∏ô‡∏∞ ‡∏ß‡πà‡∏≤‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏∏‡∏Ç‡πÅ‡∏ö‡∏ö‡∏ô‡∏µ‡πâ ‡πÄ‡∏ò‡∏≠‡∏Ñ‡∏π‡πà‡∏Ñ‡∏ß‡∏£‡∏Å‡∏±‡∏ö‡∏°‡∏±‡∏ô‡∏°‡∏≤‡∏Å",
	"‡∏ä‡πà‡∏ß‡∏á‡πÄ‡∏ß‡∏•‡∏≤‡∏ô‡∏µ‡πâ‡∏î‡∏µ‡∏°‡∏≤‡∏Å‡πÄ‡∏•‡∏¢ ‡∏Ç‡∏≠‡πÉ‡∏´‡πâ‡∏°‡∏±‡∏ô‡∏≠‡∏¢‡∏π‡πà‡∏Å‡∏±‡∏ö‡πÄ‡∏ò‡∏≠‡∏ô‡∏≤‡∏ô‡πÜ"
]

negative_responses = [
    "‡πÑ‡∏°‡πà‡πÄ‡∏õ‡πá‡∏ô‡πÑ‡∏£‡∏ô‡∏∞‡∏Ñ‡∏£‡∏±‡∏ö ‡∏ß‡∏±‡∏ô‡∏û‡∏£‡∏∏‡πà‡∏á‡∏ô‡∏µ‡πâ‡∏¢‡∏±‡∏á‡πÄ‡∏£‡∏¥‡πà‡∏°‡πÉ‡∏´‡∏°‡πà‡πÑ‡∏î‡πâ‡πÄ‡∏™‡∏°‡∏≠ üíô",
    "‡πÄ‡∏Ç‡πâ‡∏≤‡πÉ‡∏à‡∏Ñ‡∏ß‡∏≤‡∏°‡∏£‡∏π‡πâ‡∏™‡∏∂‡∏Å‡πÄ‡∏•‡∏¢ ‡∏Ç‡∏≠‡πÄ‡∏õ‡πá‡∏ô‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÉ‡∏à‡πÉ‡∏´‡πâ‡∏ô‡∏∞‡∏Ñ‡∏£‡∏±‡∏ö",
    "‡∏Ñ‡∏∏‡∏ì‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡∏≠‡∏¢‡∏π‡πà‡∏Ñ‡∏ô‡πÄ‡∏î‡∏µ‡∏¢‡∏ß ‡πÄ‡∏£‡∏≤‡∏≠‡∏¢‡∏π‡πà‡∏ï‡∏£‡∏á‡∏ô‡∏µ‡πâ‡πÄ‡∏™‡∏°‡∏≠ ü´Ç",
    "‡πÑ‡∏°‡πà‡πÄ‡∏õ‡πá‡∏ô‡πÑ‡∏£‡πÄ‡∏•‡∏¢‡∏ô‡∏∞ ‡πÄ‡∏£‡∏≤‡∏ó‡∏∏‡∏Å‡∏Ñ‡∏ô‡∏°‡∏µ‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏£‡∏π‡πâ‡∏™‡∏∂‡∏Å‡πÑ‡∏°‡πà‡πÇ‡∏≠‡πÄ‡∏Ñ‡πÑ‡∏î‡πâ‡∏ó‡∏±‡πâ‡∏á‡∏ô‡∏±‡πâ‡∏ô ‡πÅ‡∏Ñ‡πà‡∏Ñ‡∏∏‡∏ì‡∏¢‡∏±‡∏á‡∏≠‡∏¢‡∏π‡πà‡∏ï‡∏£‡∏á‡∏ô‡∏µ‡πâ ‡∏¢‡∏±‡∏á‡∏´‡∏≤‡∏¢‡πÉ‡∏à ‡∏¢‡∏±‡∏á‡∏û‡∏¢‡∏≤‡∏¢‡∏≤‡∏° ‡∏ô‡∏±‡πà‡∏ô‡∏Å‡πá‡πÄ‡∏Å‡πà‡∏á‡∏°‡∏≤‡∏Å‡πÜ ‡πÅ‡∏•‡πâ‡∏ß‡∏ô‡∏∞ ‡πÄ‡∏£‡∏≤‡∏≠‡∏¢‡∏π‡πà‡∏ï‡∏£‡∏á‡∏ô‡∏µ‡πâ‡πÄ‡∏™‡∏°‡∏≠‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Ñ‡∏∏‡∏ì‡∏ô‡∏∞",
    "‡∏ß‡∏±‡∏ô‡∏ô‡∏µ‡πâ‡∏≠‡∏≤‡∏à‡∏à‡∏∞‡πÅ‡∏¢‡πà ‡πÅ‡∏ï‡πà‡∏û‡∏£‡∏∏‡πà‡∏á‡∏ô‡∏µ‡πâ‡∏≠‡∏≤‡∏à‡∏à‡∏∞‡∏î‡∏µ‡∏Å‡∏ß‡πà‡∏≤‡∏ó‡∏µ‡πà‡∏Ñ‡∏¥‡∏î‡∏Å‡πá‡πÑ‡∏î‡πâ‡∏ô‡∏∞",
"‡∏ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡πÑ‡∏´‡∏ß‡∏à‡∏£‡∏¥‡∏á‡πÜ ‡∏Å‡πá‡∏û‡∏±‡∏Å‡∏Å‡πà‡∏≠‡∏ô‡∏ô‡∏∞ ‡πÑ‡∏°‡πà‡∏°‡∏µ‡πÉ‡∏Ñ‡∏£‡∏ß‡πà‡∏≤‡πÄ‡∏ò‡∏≠‡∏´‡∏£‡∏≠‡∏Å",
"‡πÑ‡∏°‡πà‡∏ï‡πâ‡∏≠‡∏á‡πÄ‡∏Å‡πà‡∏á‡πÄ‡∏™‡∏°‡∏≠ ‡πÑ‡∏°‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏¢‡∏¥‡πâ‡∏°‡πÄ‡∏™‡∏°‡∏≠ ‡πÅ‡∏Ñ‡πà‡πÄ‡∏õ‡πá‡∏ô‡πÄ‡∏ò‡∏≠‡πÉ‡∏ô‡πÅ‡∏ö‡∏ö‡∏ó‡∏µ‡πà‡πÄ‡∏ò‡∏≠‡πÄ‡∏õ‡πá‡∏ô‡∏Å‡πá‡∏û‡∏≠‡πÅ‡∏•‡πâ‡∏ß",
"‡πÑ‡∏°‡πà‡πÄ‡∏õ‡πá‡∏ô‡πÑ‡∏£‡πÄ‡∏•‡∏¢‡∏ó‡∏µ‡πà‡∏à‡∏∞‡∏û‡∏±‡∏Å ‡∏à‡∏∞‡∏≠‡πà‡∏≠‡∏ô‡πÅ‡∏≠ ‡πÄ‡∏£‡∏≤‡∏Ñ‡∏∑‡∏≠‡∏°‡∏ô‡∏∏‡∏©‡∏¢‡πå‡πÑ‡∏á",
"‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏à‡πá‡∏ö‡∏õ‡∏ß‡∏î‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡πÅ‡∏õ‡∏•‡∏ß‡πà‡∏≤‡πÄ‡∏ò‡∏≠‡∏≠‡πà‡∏≠‡∏ô‡πÅ‡∏≠ ‡∏°‡∏±‡∏ô‡πÅ‡∏õ‡∏•‡∏ß‡πà‡∏≤‡πÄ‡∏ò‡∏≠‡∏°‡∏µ‡∏´‡∏±‡∏ß‡πÉ‡∏à",
"‡∏ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡∏°‡∏µ‡πÉ‡∏Ñ‡∏£‡πÄ‡∏Ç‡πâ‡∏≤‡πÉ‡∏à ‡πÄ‡∏£‡∏≤‡πÄ‡∏Ç‡πâ‡∏≤‡πÉ‡∏à‡∏ô‡∏∞ ‡∏ß‡πà‡∏≤‡∏°‡∏±‡∏ô‡πÑ‡∏°‡πà‡∏á‡πà‡∏≤‡∏¢‡πÄ‡∏•‡∏¢",
"‡πÑ‡∏°‡πà‡πÄ‡∏õ‡πá‡∏ô‡πÑ‡∏£‡πÄ‡∏•‡∏¢‡∏ó‡∏µ‡πà‡∏ï‡∏≠‡∏ô‡∏ô‡∏µ‡πâ‡∏à‡∏∞‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡πÇ‡∏≠‡πÄ‡∏Ñ ‡πÄ‡∏î‡∏µ‡πã‡∏¢‡∏ß‡∏°‡∏±‡∏ô‡∏Å‡πá‡∏Ñ‡πà‡∏≠‡∏¢‡πÜ ‡∏î‡∏µ‡∏Ç‡∏∂‡πâ‡∏ô",
"‡πÑ‡∏°‡πà‡∏°‡∏µ‡πÉ‡∏Ñ‡∏£‡∏™‡∏°‡∏ö‡∏π‡∏£‡∏ì‡πå‡πÅ‡∏ö‡∏ö‡∏´‡∏£‡∏≠‡∏Å ‡∏°‡∏±‡∏ô‡πÄ‡∏õ‡πá‡∏ô‡∏™‡πà‡∏ß‡∏ô‡∏´‡∏ô‡∏∂‡πà‡∏á‡∏Ç‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡πÄ‡∏ï‡∏¥‡∏ö‡πÇ‡∏ï"
]

@app.route('/')
def home():
    return render_template('index.html')

@app.route('/analyze', methods=['POST'])
def analyze():
    user_input = request.form['text']
    if not user_input.strip():
        return jsonify({'sentiment' : 'none', 'response' : '‡πÇ‡∏õ‡∏£‡∏î‡πÉ‡∏™‡πà‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Å‡πà‡∏≠‡∏ô‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå'})
    
    processed = preprocess(user_input)
    text_vector = vectorizer.transform([processed])
    prediction = model.predict(text_vector)[0]

    if prediction == "‡∏ö‡∏ß‡∏Å":
        sentiment = 'positive'
        response = random.choice(positive_responses)
    else:
        sentiment = 'negative'
        response = random.choice(negative_responses)

    return jsonify({'sentiment' : sentiment, 'response' : response})

if __name__ == '__main__':
    app.run(debug=True)